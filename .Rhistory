carmodel2<-lm(distance~speed2, cartrainSet)
speed2<- cartrainSet$speed^2
carmodel2<-lm(distance~speed2, cartrainSet)
summary(carmodel2)
carPrediction2 <- predict(carmodel2,cartestSet)
summary(carmodel2)
carPrediction2 <- predict(carmodel2,cartestSet)
cartestSet
carPrediction2 <- predict(carmodel2,cartestSet)
speed2<- cartestSet$speed^2
carmodel2<-lm(distance~speed2, cartrainSet)
summary(carmodel2)
carPrediction2 <- predict(carmodel2,cartestSet)
speed2<- cartestSet$speed^2
carmodel2<-lm(distance~speed2, cartrainSet)
speed2<- cartrainSet$speed^2
carmodel2<-lm(distance~ speed2, cartrainSet)
summary(carmodel2)
carPrediction <- predict(carmodel,cartestSet)
carPrediction
carPrediction2 <- predict(carmodel2,cartestSet)
carPrediction2
tablafinal<-cbind(cartestSet,carPrediction2)
tablafinal<-cbind(cartrainingSet,carPrediction2)
tablafinal<-cbind(cartrainSet,carPrediction2)
View(tablafinal)
ggplot(tablafinal, aes (x=tablafinal$speed, y=tablafinal$carPrediction2))
ggplot(tablafinal, aes (x=tablafinal$speed, y=tablafinal$carPrediction2)+ geom_point()+ xlim(0, 100) + ylim(0, 100))
ggplot(tablafinal, aes (x=tablafinal$speed, y=tablafinal$carPrediction2)+ geom_point()+ xlim(0, 100) + ylim(0, 100))
ggplot(tablafinal, aes (x=tablafinal$speed, y=tablafinal$carPrediction2)+ geom_point()
ggplot(tablafinal, aes (x=tablafinal$speed, y=tablafinal$carPrediction2)+ geom_point())
ggplot(tablafinal, aes (x=tablafinal$speed, y=tablafinal$carPrediction2))
ggplot(tablafinal, aes (x=tablafinal$speed, y=tablafinal$carPrediction2)+geom_point())
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()
summary(carmodel2)
tablafinal<-cbind(cartrainSet,carPrediction2,distance-carPrediction2)
tablafinal<-cbind(cartrainSet,carPrediction2,cars$distance-carPrediction2)
tablafinal<-cbind(cartrainSet,carPrediction2,cartrainSet$distance-carPrediction2)
sum(cartrainSet$distance-carPrediction2)
car2error<-(cartrainSet$distance-carPrediction2)
tablafinal<-cbind(cartrainSet,carPrediction2,car2error)
sum(car2error)
sum(sqrt(car2error^2))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)+ geom_smooth(method = lm, se = F)
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)+ geom_smooth(method = lm, formula= distance~ speed2 se = F)
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)+ geom_smooth(method = lm, formula= distance~ speed2, se = F)
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)+ geom_smooth(method = lm, formula= tablafinal$distance~ speed2, se = F)
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
#We open the readr package and the csv file we'll work on --> with import data set
#it's done automatically
library(readr)
library(ggplot2)
cars <- read_csv("C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/cars.csv")
#We have a 1st overlook on the data to get to know it
summary(cars)
#We'll rework data to visualize it properly:
#first of all we'll rename columns to save time when coding:
names(cars) <- c("name","speed","distance")
table(cars$name)
barplot(table(cars$name))
#used breaks for the no of columns
hist(cars$speed, breaks = 25)
hist(cars$distance, breaks = 120)
boxplot(cars$speed,cars$distance)
boxplot(cars$distance)
ggplot(cars,aes(x=cars$speed,y=cars$distance)) + geom_point()
+ geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
ggplot(wooutlier,aes(x=wooutlier$speed,y=wooutlier$distance)) + geom_point()
+ geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
#how to spot and extract and outlier
which(cars$speed < 5)
box <- boxplot(cars$distance)
which(cars$distance == box$out)
cars[c(which(cars$speed < 5),which(cars$distance == box$out)),]
wooutlier <-cars[-c(which(cars$speed < 5),which(cars$distance == box$out)),]
wooutlier
set.seed(123)
cartrainSize<-round(nrow(cars)*0.7)
cartestSize<-nrow(cars)-cartrainSize
cartraining_indices<-sample(seq_len(nrow(cars)),size =cartrainSize)
cartrainSet<-cars[cartraining_indices,]
cartestSet<-cars[-cartraining_indices,]
carmodel<-lm(distance~ speed, cartrainSet)
summary(carmodel)
carPrediction <- predict(carmodel,cartestSet)
carPrediction
set.seed(123)
wotrainSize<-round(nrow(wooutlier)*0.7)
wotestSize<-nrow(wooutlier)-wotrainSize
wotraining_indices<-sample(seq_len(nrow(wooutlier)),size =wotrainSize)
wotrainSet<-wooutlier[wotraining_indices,]
wotestSet<-wooutlier[-wotraining_indices,]
womodel<-lm(distance~speed, wotrainSet)
summary(womodel)
woPrediction <- predict(womodel,wotestSet)
woPrediction
#now we'll have a look at both models' performances:
summary(carmodel)
summary(womodel)
carswprediction<-cbind(cartestSet,carPrediction)
carerror<-(carswprediction$distance-carswprediction$carPrediction)
carswerror<-cbind(carswprediction,carerror)
wowprediction<-cbind(wotestSet,woPrediction)
woerror<-(wowprediction$distance-wowprediction$woPrediction)
wowerror<-cbind(wowprediction,woerror)
sum(carerror)
sum(woerror)
sum(sqrt(carerror^2))
sum(sqrt(woerror^2))
ggplot(carswprediction, aes(x=carswprediction$distance, y=carswprediction$carPrediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
ggplot(wowprediction, aes(x=wowprediction$distance, y=wowprediction$woPrediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
speed2<- cartrainSet$speed^2
carmodel2<-lm(distance~ speed2, cartrainSet)
summary(carmodel2)
carPrediction2 <- predict(carmodel2,cartestSet)
carPrediction2
car2error<-(cartrainSet$distance-carPrediction2)
tablafinal<-cbind(cartrainSet,carPrediction2,car2error)
sum(car2error)
sum(sqrt(car2error^2))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tablafinal,aes(x=tablafinal$distance,y=tablafinal$carPrediction2)) + geom_point()
ggplot(tablafinal,aes(x=tablafinal$distance,y=tablafinal$carPrediction2)) + geom_point() + geom_abline()
sum(abs(car2error))
sum(abs(carerror)
sum(abs(carerror))
sum(abs(carerror))
sum(abs(woerror))
summary(carerror)
carerror
sum(abs(carerror))/15
woerror
sum(abs(woerror))/14
car2error<-(cartrainSet$distance-carPrediction2)
sum(sqrt(car2error^2))/35
sum(sqrt(car2error^2)/35)
sum(abs(car2error))/35
sum(abs(car2error))/35
sum(sqrt((car2error^2)/2))
sum(sqrt((car2error^2)/35))
sum(sqrt((carerror^2)/15))
sum(sqrt((woerror^2)/14))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tablafinal,aes(x=tablafinal$distance,y=tablafinal$carPrediction2)) + geom_point() + geom_abline()
#We open the readr package and the csv file we'll work on --> with import data set
#it's done automatically
library(readr)
library(ggplot2)
cars <- read_csv("C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/cars.csv")
#We have a 1st overlook on the data to get to know it
summary(cars)
#We'll rework data to visualize it properly:
#first of all we'll rename columns to save time when coding:
names(cars) <- c("name","speed","distance")
table(cars$name)
barplot(table(cars$name))
#used breaks for the no of columns
hist(cars$speed, breaks = 25)
hist(cars$distance, breaks = 120)
boxplot(cars$speed,cars$distance)
boxplot(cars$distance)
ggplot(cars,aes(x=cars$speed,y=cars$distance)) + geom_point()
+ geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
ggplot(wooutlier,aes(x=wooutlier$speed,y=wooutlier$distance)) + geom_point()
+ geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
#how to spot and extract and outlier
which(cars$speed < 5)
box <- boxplot(cars$distance)
which(cars$distance == box$out)
cars[c(which(cars$speed < 5),which(cars$distance == box$out)),]
wooutlier <-cars[-c(which(cars$speed < 5),which(cars$distance == box$out)),]
wooutlier
set.seed(123)
cartrainSize<-round(nrow(cars)*0.7)
cartestSize<-nrow(cars)-cartrainSize
cartraining_indices<-sample(seq_len(nrow(cars)),size =cartrainSize)
cartrainSet<-cars[cartraining_indices,]
cartestSet<-cars[-cartraining_indices,]
carmodel<-lm(distance~ speed, cartrainSet)
summary(carmodel)
carPrediction <- predict(carmodel,cartestSet)
carPrediction
set.seed(123)
wotrainSize<-round(nrow(wooutlier)*0.7)
wotestSize<-nrow(wooutlier)-wotrainSize
wotraining_indices<-sample(seq_len(nrow(wooutlier)),size =wotrainSize)
wotrainSet<-wooutlier[wotraining_indices,]
wotestSet<-wooutlier[-wotraining_indices,]
womodel<-lm(distance~speed, wotrainSet)
summary(womodel)
woPrediction <- predict(womodel,wotestSet)
woPrediction
#now we'll have a look at both models' performances:
summary(carmodel)
summary(womodel)
carswprediction<-cbind(cartestSet,carPrediction)
carerror<-(carswprediction$distance-carswprediction$carPrediction)
carswerror<-cbind(carswprediction,carerror)
wowprediction<-cbind(wotestSet,woPrediction)
woerror<-(wowprediction$distance-wowprediction$woPrediction)
wowerror<-cbind(wowprediction,woerror)
sum(abs(carerror))/15
sum(abs(woerror))/14
sum(sqrt((carerror^2)/15))
sum(sqrt((woerror^2)/14))
ggplot(carswprediction, aes(x=carswprediction$distance, y=carswprediction$carPrediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
ggplot(wowprediction, aes(x=wowprediction$distance, y=wowprediction$woPrediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
speed2<- cartrainSet$speed^2
carmodel2<-lm(distance~ speed2, cartrainSet)
summary(carmodel2)
carPrediction2 <- predict(carmodel2,cartestSet)
carPrediction2
car2error<-(cartrainSet$distance-carPrediction2)
tablafinal<-cbind(cartrainSet,carPrediction2,car2error)
sum(abs(car2error))/35
sum(sqrt((car2error^2)/35))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tablafinal,aes(x=tablafinal$distance,y=tablafinal$carPrediction2)) + geom_point() + geom_abline()
tablafinal<-cbind(cartrainSet,carPrediction2,car2error)
View(tablafinal)
View(tablafinal)
View(cars)
View(cars)
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125) + geom_density()
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125) + geom_density()
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125) + geom_density(aes(x=tablafinal$speed, y=tablafinal$distance))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125) + geom_density(aes(x=tablafinal$speed, y=tablafinal$distance))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125) + geom_density(aes(x=tablafinal$speed, y=distance))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125) + geom_density(aes(x=tablafinal$speed,y=distance))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125) + geom_density(aes(x=tablafinal$speed,y=tablafinal$distance))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
#We open the readr package and the csv file we'll work on --> with import data set
#it's done automatically
library(readr)
library(ggplot2)
cars <- read_csv("C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/cars.csv")
#We have a 1st overlook on the data to get to know it
summary(cars)
#We'll rework data to visualize it properly:
#first of all we'll rename columns to save time when coding:
names(cars) <- c("name","speed","distance")
table(cars$name)
barplot(table(cars$name))
#used breaks for the no of columns
hist(cars$speed, breaks = 25)
hist(cars$distance, breaks = 120)
boxplot(cars$speed,cars$distance)
boxplot(cars$distance)
#how to spot and extract and outlier
which(cars$speed < 5)
box <- boxplot(cars$distance)
which(cars$distance == box$out)
cars[c(which(cars$speed < 5),which(cars$distance == box$out)),]
wo_outlier <-cars[-c(which(cars$speed < 5),which(cars$distance == box$out)),]
wo_outlier
ggplot(cars,aes(x=cars$speed,y=cars$distance)) + geom_point()
+ geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
ggplot(cars,aes(x=cars$speed,y=cars$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
ggplot(wo_outlier,aes(x=wo_outlier$speed,y=wo_outlier$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
set.seed(123)
cartrainSize<-round(nrow(cars)*0.7)
cartestSize<-nrow(cars)-cartrainSize
cartraining_indices<-sample(seq_len(nrow(cars)),size =cartrainSize)
cartrainSet<-cars[cartraining_indices,]
cartestSet<-cars[-cartraining_indices,]
carmodel<-lm(distance~ speed, cartrainSet)
summary(carmodel)
carPrediction <- predict(carmodel,cartestSet)
carPrediction
set.seed(123)
wotrainSize<-round(nrow(wooutlier)*0.7)
wotestSize<-nrow(wooutlier)-wotrainSize
wotraining_indices<-sample(seq_len(nrow(wooutlier)),size =wotrainSize)
wotrainSet<-wooutlier[wotraining_indices,]
wotestSet<-wooutlier[-wotraining_indices,]
womodel<-lm(distance~speed, wotrainSet)
summary(womodel)
woPrediction <- predict(womodel,wotestSet)
woPrediction
#now we'll have a look at both models' performances:
summary(carmodel)
summary(womodel)
carswprediction<-cbind(cartestSet,carPrediction)
carerror<-(carswprediction$distance-carswprediction$carPrediction)
carswerror<-cbind(carswprediction,carerror)
wowprediction<-cbind(wotestSet,woPrediction)
woerror<-(wowprediction$distance-wowprediction$woPrediction)
wowerror<-cbind(wowprediction,woerror)
sum(abs(carerror))/15
sum(abs(woerror))/14
sum(sqrt((carerror^2)/15))
sum(sqrt((woerror^2)/14))
ggplot(carswprediction, aes(x=carswprediction$distance, y=carswprediction$carPrediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
ggplot(wowprediction, aes(x=wowprediction$distance, y=wowprediction$woPrediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
speed2<- cartrainSet$speed^2
carmodel2<-lm(distance~ speed2, cartrainSet)
summary(carmodel2)
carPrediction2 <- predict(carmodel2,cartestSet)
carPrediction2
car2error<-(cartrainSet$distance-carPrediction2)
tablafinal<-cbind(cartrainSet,carPrediction2,car2error)
sum(abs(car2error))/35
sum(sqrt((car2error^2)/35))
ggplot(tablafinal,aes(x=tablafinal$speed,y=tablafinal$carPrediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tablafinal,aes(x=tablafinal$distance,y=tablafinal$carPrediction2)) + geom_point() + geom_abline()
car_trainSize<-round(nrow(cars)*0.7)
car_testSize<-nrow(cars)-car_trainSize
#We open the readr package and the csv file we'll work on --> with import data set
#it's done automatically
library(readr)
library(ggplot2)
cars <- read_csv("C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/cars.csv")
#We have a 1st overlook on the data to get to know it
summary(cars)
#We'll rework data to visualize it properly:
#first of all we'll rename columns to save time when coding:
names(cars) <- c("name","speed","distance")
#We open the readr package and the csv file we'll work on --> with import data set
#it's done automatically
library(readr)
library(ggplot2)
cars <- read_csv("C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/cars.csv")
#We have a 1st overlook on the data to get to know it
summary(cars)
#We'll rework data to visualize it properly:
#first of all we'll rename columns to save time when coding:
names(cars) <- c("name","speed","distance")
table(cars$name)
barplot(table(cars$name))
#used breaks for the no of columns
hist(cars$speed, breaks = 25)
hist(cars$distance, breaks = 120)
boxplot(cars$speed,cars$distance)
boxplot(cars$distance)
#how to spot and extract and outlier
which(cars$speed < 5)
box <- boxplot(cars$distance)
which(cars$distance == box$out)
cars[c(which(cars$speed < 5),which(cars$distance == box$out)),]
wo_outlier <-cars[-c(which(cars$speed < 5),which(cars$distance == box$out)),]
wo_outlier
ggplot(cars,aes(x=cars$speed,y=cars$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
ggplot(wo_outlier,aes(x=wo_outlier$speed,y=wo_outlier$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
set.seed(123)
car_trainSize<-round(nrow(cars)*0.7)
car_testSize<-nrow(cars)-car_trainSize
car_training_indices<-sample(seq_len(nrow(cars)),size =car_trainSize)
car_trainSet<-cars[car_training_indices,]
car_testSet<-cars[-car_training_indices,]
car_model<-lm(distance~ speed, car_trainSet)
summary(car_model)
car_Prediction <- predict(car_model,car_testSet)
car_Prediction
set.seed(123)
wo_trainSize<-round(nrow(wo_outlier)*0.7)
wo_testSize<-nrow(wo_outlier)-wo_trainSize
wo_training_indices<-sample(seq_len(nrow(wo_outlier)),size =wo_trainSize)
wo_trainSet<-wo_outlier[wo_training_indices,]
wo_testSet<-wo_outlier[-wo_training_indices,]
wo_model<-lm(distance~speed, wo_trainSet)
summary(wo_model)
wo_Prediction <- predict(wo_model,wo_testSet)
wo_Prediction
#now we'll have a look at both models' performances:
summary(car_model)
summary(wo_model)
cars_wprediction<-cbind(car_testSet,car_Prediction)
car_error<-(cars_wprediction$distance-cars_wprediction$car_Prediction)
cars_werror<-cbind(cars_wprediction,car_error)
wo_wprediction<-cbind(wo_testSet,wo_Prediction)
wo_error<-(wo_wprediction$distance-wo_wprediction$wo_Prediction)
wo_werror<-cbind(wo_wprediction,wo_error)
sum(abs(car_error))/15
sum(abs(wo_error))/14
sum(sqrt((car_error^2)/15))
sum(sqrt((wo_error^2)/14))
ggplot(cars_wprediction, aes(x=cars_wprediction$distance, y=cars_wprediction$car_Prediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
ggplot(wo_wprediction, aes(x=wo_wprediction$distance, y=wo_wprediction$wo_Prediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
speed2<- car_trainSet$speed^2
car_model2<-lm(distance~ speed2, car_trainSet)
summary(car_model2)
car_Prediction2 <- predict(car_model2,car_testSet)
car_Prediction2
car2_error<-(car_trainSet$distance-car_Prediction2)
tabla_final<-cbind(car_trainSet,car_Prediction2,car2_error)
sum(abs(car2_error))/35
sum(sqrt((car2_error^2)/35))
ggplot(tabla_final,aes(x=tabla_final$speed,y=tabla_final$car_Prediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tabla_final,aes(x=tabla_final$distance,y=tabla_final$car_Prediction2)) + geom_point() + geom_abline()
car_Prediction2 <- predict(car_model2,car_trainSet)
car_Prediction2
car2_error<-(car_trainSet$distance-car_Prediction2)
tabla_final<-cbind(car_trainSet,car_Prediction2,car2_error)
sum(abs(car2_error))/35
sum(sqrt((car2_error^2)/35))
ggplot(tabla_final,aes(x=tabla_final$speed,y=tabla_final$car_Prediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tabla_final,aes(x=tabla_final$distance,y=tabla_final$car_Prediction2)) + geom_point() + geom_abline()
car_trainSet <- [car_training_indices,]
car_trainSet <- [car_training_indices,]
car_training_indices <- sample(seq_len(nrow(cars)), size=car_trainSize)
car_trainSet <- [car_training_indices,]
#We open the readr package and the csv file we'll work on --> with import data set
#it's done automatically
library(readr)
library(ggplot2)
cars <- read_csv("C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/cars.csv")
#We have a 1st overlook on the data to get to know it
summary(cars)
#We'll rework data to visualize it properly:
#first of all we'll rename columns to save time when coding:
names(cars) <- c("name","speed","distance")
table(cars$name)
barplot(table(cars$name))
#used breaks for the no of columns
hist(cars$speed, breaks = 25)
hist(cars$distance, breaks = 120)
boxplot(cars$speed, cars$distance)
boxplot(cars$distance)
#how to spot and extract and outlier
which(cars$speed < 5)
box <- boxplot(cars$distance)
which(cars$distance == box$out)
cars[c(which(cars$speed < 5), which(cars$distance == box$out)), ]
wo_outlier <- cars[-c(which(cars$speed < 5), which(cars$distance == box$out)), ]
wo_outlier
ggplot(cars, aes(x=cars$speed, y=cars$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
ggplot(wo_outlier, aes(x=wo_outlier$speed, y=wo_outlier$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
set.seed(123)
car_trainSize <- round(nrow(cars)*0.7)
car_testSize <- nrow(cars) -car_trainSize
car_training_indices <- sample(seq_len(nrow(cars)), size=car_trainSize)
car_trainSet<-[car_training_indices,]
tabla_final <- cbind(car_trainSet, car_Prediction2, car2_error)
View(tabla_final)
View(tabla_final)
ggplot(tabla_final,aes(x = tabla_final$speed,y = tabla_final$car_Prediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
#We open the readr package and the csv file we'll work on --> with import data set
#it's done automatically
library(readr)
library(ggplot2)
cars <- read_csv("C:/Users/user/Downloads/R Tutorial Data/R Tutorial Data Sets/cars.csv")
#We have a 1st overlook on the data to get to know it
summary(cars)
#We'll rework data to visualize it properly:
#first of all we'll rename columns to save time when coding:
names(cars) <- c("name","speed","distance")
table(cars$name)
barplot(table(cars$name))
#used breaks for the no of columns
hist(cars$speed, breaks = 25)
hist(cars$distance, breaks = 120)
boxplot(cars$speed, cars$distance)
boxplot(cars$distance)
#how to spot and extract and outlier
which(cars$speed < 5)
box <- boxplot(cars$distance)
which(cars$distance == box$out)
cars[c(which(cars$speed < 5), which(cars$distance == box$out)), ]
wo_outlier <- cars[-c(which(cars$speed < 5), which(cars$distance == box$out)), ]
wo_outlier
ggplot(cars, aes(x = cars$speed, y=cars$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
ggplot(wo_outlier, aes(x = wo_outlier$speed, y = wo_outlier$distance)) + geom_point() + geom_smooth(method = lm, se = F) + xlim(0, 25) + ylim(0, 120)
set.seed(123)
car_trainSize <- round(nrow(cars) * 0.7)
car_testSize <- nrow(cars) -car_trainSize
car_training_indices <- sample(seq_len(nrow(cars)), size = car_trainSize)
car_trainSet <- [car_training_indices,]
car_testSet <- cars[-car_training_indices,]
car_model <- lm(distance~ speed, car_trainSet)
summary(car_model)
car_Prediction <- predict(car_model, car_testSet)
car_Prediction
set.seed(123)
wo_trainSize <- round(nrow(wo_outlier) * 0.7)
wo_testSize <- nrow(wo_outlier) - wo_trainSize
wo_training_indices <- sample(seq_len(nrow(wo_outlier)), size = wo_trainSize)
wo_trainSet <- wo_outlier[wo_training_indices, ]
wo_testSet <- wo_outlier[-wo_training_indices, ]
wo_model <- lm(distance~speed, wo_trainSet)
summary(wo_model)
wo_Prediction <- predict(wo_model, wo_testSet)
wo_Prediction
#now we'll have a look at both models' performances:
summary(car_model)
summary(wo_model)
cars_wprediction<-cbind(car_testSet, car_Prediction)
car_error <- (cars_wprediction$distance-cars_wprediction$car_Prediction)
cars_werror <- cbind(cars_wprediction, car_error)
wo_wprediction <- cbind(wo_testSet, wo_Prediction)
wo_error <- (wo_wprediction$distance-wo_wprediction$wo_Prediction)
wo_werror <- cbind(wo_wprediction, wo_error)
sum(abs(car_error)) / 15
sum(abs(wo_error)) / 14
sum(sqrt((car_error^2) / 15))
sum(sqrt((wo_error^2) / 14))
ggplot(cars_wprediction, aes(x = cars_wprediction$distance, y = cars_wprediction$car_Prediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
ggplot(wo_wprediction, aes(x = wo_wprediction$distance, y = wo_wprediction$wo_Prediction))+ geom_point()+ xlim(0, 100) + ylim(0, 100)+ geom_abline()
speed2 <- car_trainSet$speed^2
car_model2 <- lm(distance ~ speed2, car_trainSet)
summary(car_model2)
car_Prediction2 <- predict(car_model2, car_trainSet)
car_Prediction2
car2_error <- (car_trainSet$distance-car_Prediction2)
tabla_final <- cbind(car_trainSet, car_Prediction2, car2_error)
sum(abs(car2_error)) / 35
sum(sqrt((car2_error ^ 2) / 35))
ggplot(tabla_final,aes(x = tabla_final$speed,y = tabla_final$car_Prediction2)) + geom_point()+ xlim(0, 25) + ylim(0, 125)
ggplot(tabla_final,aes(x = tabla_final$distance,y = tabla_final$car_Prediction2)) + geom_point() + geom_abline()
